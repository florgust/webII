openapi: 3.0.0
info:
  title: API de Usuários
  version: 1.0.0
  description: Documentação da API de Usuários
components:
  schemas:
    Usuario:
      type: object
      properties:
        id:
          type: integer
          description: ID do usuário
        nome:
          type: string
          description: Nome do usuário
        email:
          type: string
          description: E-mail do usuário
        data_nascimento:
          type: string
          format: date
          description: Data de nascimento do usuário (formato YYYY-MM-DD)
        status:
          type: integer
          description: Status do usuário (1 para ativo, 0 para inativo)
        apelido:
          type: string
          description: Apelido do usuário
        tipo_usuario:
          type: string
          description: Tipo do usuário (ex.: admin, comum)
    Filme:
      type: object
      properties:
        id:
          type: integer
          description: ID do filme
        nome:
          type: string
          description: Nome do filme
        diretor:
          type: string
          description: Diretor do filme
        anoLancamento:
          type: integer
          description: Ano de lançamento do filme
        duracao:
          type: integer
          description: Duração do filme em minutos
        produtora:
          type: string
          description: Produtora do filme
        classificacao:
          type: string
          description: Classificação indicativa do filme
        poster:
          type: string
          description: URL do pôster do filme
        status:
          type: integer
          description: Status do filme (1 para ativo, 0 para inativo)
        createdAt:
          type: string
          format: date-time
          description: Data de criação do registro
        updatedAt:
          type: string
          format: date-time
          description: Data da última atualização do registro
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          description: Mensagem de erro
paths:
  /usuarios:
    get:
      tags:
        - Usuarios
      summary: Busca todos os usuários ativados
      description: Busca todos os usuários em que o status é igual 1, ou seja, usuários ativados
      responses:
        200:
          description: Lista de usuários retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      description: ID do usuário
                    nome:
                      type: string
                      description: Nome do usuário
                    email:
                      type: string
                      description: E-mail do usuário
                    data_nascimento:
                      type: string
                      format: date
                      description: Data de nascimento do usuário (formato YYYY-MM-DD)
                    status:
                      type: integer
                      description: Status do usuário (1 para ativo, 0 para inativo)
                    apelido:
                      type: string
                      description: Apelido do usuário
                    tipo_usuario:
                      type: string
                      description: Tipo do usuário (ex.: admin, comum)
        500:
          description: Erro interno do servidor
  /usuario/{id}:
    get:
      tags:
        - Usuarios
      summary: Busca um usuário pelo ID
      description: Retorna os dados de um usuário específico com base no ID fornecido.
      parameters:
        - name: id
          in: path
          required: true
          description: ID do usuário a ser buscado
          schema:
            type: integer
      responses:
        200:
          description: Dados do usuário retornados com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Usuario'
        404:
          description: Usuário não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Erro interno do servidor
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      tags:
        - Usuarios
      summary: Atualiza os dados de um usuário
      description: Atualiza os dados de um usuário específico com base no ID fornecido.
      parameters:
        - name: id
          in: path
          required: true
          description: ID do usuário a ser atualizado
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: Nome do usuário
                email:
                  type: string
                  description: E-mail do usuário
                senha:
                  type: string
                  description: Senha do usuário
                data_nascimento:
                  type: string
                  format: date
                  description: Data de nascimento do usuário (formato YYYY-MM-DD)
                status:
                  type: integer
                  description: Status do usuário (1 para ativo, 0 para inativo)
                apelido:
                  type: string
                  description: Apelido do usuário
                tipo_usuario:
                  type: string
                  description: Tipo do usuário (ex.: admin, comum)
              required: [] # Nenhum campo é obrigatório
      responses:
        200:
          description: Usuário atualizado com sucesso
        400:
          description: Erro na requisição
        404:
          description: Usuário não encontrado
        500:
          description: Erro interno do servidor
  /usuario:
    post:
      tags:
        - Usuarios
      summary: Cria um novo usuário
      description: Adiciona um novo usuário ao sistema com base nas informações fornecidas.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                  description: Nome do novo usuário
                email:
                  type: string
                  description: E-mail do novo usuário
                senha:
                  type: string
                  description: Senha do novo usuário
                data_nascimento:
                  type: string
                  format: date
                  description: Data de nascimento do novo usuário (formato YYYY-MM-DD)
                status:
                  type: integer
                  description: Status do usuário (1 para ativo, 0 para inativo)
                apelido:
                  type: string
                  description: Apelido do novo usuário
                tipo_usuario:
                  type: string
                  description: Tipo do usuário (ex.: admin, comum)
      responses:
        201:
          description: Usuário criado com sucesso
        400:
          description: Erro na requisição
  /usuario/{id}/delete:
    put:
      tags:
        - Usuarios
      summary: Realiza o delete lógico de um usuário
      description: Atualiza o status do usuário para 0 (inativo), indicando um delete lógico.
      parameters:
        - name: id
          in: path
          required: true
          description: ID do usuário a ser deletado logicamente
          schema:
            type: integer
      responses:
        200:
          description: Usuário deletado logicamente com sucesso
        404:
          description: Usuário não encontrado
        500:
          description: Erro interno do servidor
  /filmes:
    get:
      tags:
        - Filme
      summary: Busca todos os filmes
      description: Retorna uma lista de todos os filmes cadastrados
      responses:
        200:
          description: Lista de filmes retornada com sucesso
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Filme'
        500:
          description: Erro interno do servidor
  /filme/{id}:
    get:
      tags:
        - Filme
      summary: Busca um filme pelo ID
      description: Retorna os dados de um filme específico com base no ID fornecido
      parameters:
        - name: id
          in: path
          required: true
          description: ID do filme a ser buscado
          schema:
            type: integer
      responses:
        200:
          description: Dados do filme retornados com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filme'
        404:
          description: Filme não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        500:
          description: Erro interno do servidor
    put:
      tags:
        - Filme
      summary: Atualiza os dados de um filme
      description: Atualiza os dados de um filme específico com base no ID fornecido
      parameters:
        - name: id
          in: path
          required: true
          description: ID do filme a ser atualizado
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filme'
      responses:
        200:
          description: Filme atualizado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filme'
        400:
          description: Erro na requisição
        404:
          description: Filme não encontrado
        500:
          description: Erro interno do servidor
  /filme:
    post:
      tags:
        - Filme
      summary: Cria um novo filme
      description: Adiciona um novo filme ao sistema com base nas informações fornecidas
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Filme'
      responses:
        201:
          description: Filme criado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Filme'
        400:
          description: Erro na requisição
        500:
          description: Erro interno do servidor
  /filme/{id}/delete:
      put:
        tags:
          - Filme
        summary: Realiza o delete lógico de um filme
        description: Atualiza o status do filme para 0 (inativo), indicando um delete lógico.
        parameters:
          - name: id
            in: path
            required: true
            description: ID do filme a ser deletado logicamente
            schema:
              type: integer
        responses:
          200:
            description: filme deletado logicamente com sucesso
          404:
            description: filme não encontrado
          500:
            description: Erro interno do servidor
